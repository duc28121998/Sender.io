{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-backdrop-md.entry.js"],"names":["Backdrop","hostRef","this","blocker","createBlocker","disableScroll","visible","tappable","stopPropagation","ionBackdropTap","prototype","connectedCallback","block","disconnectedCallback","unblock","onMouseDown","ev","emitTap","preventDefault","emit","render","_a","mode","tabindex","class","style","ios","md"],"mappings":"iJAAA,gFAMIA,EAEJ,WACE,SAASA,EAASC,GAChB,YAAiBC,KAAMD,GACvBC,KAAKC,QAAU,qBAAmBC,cAAc,CAC9CC,eAAe,IAMjBH,KAAKI,SAAU,EAKfJ,KAAKK,UAAW,EAKhBL,KAAKM,iBAAkB,EACvBN,KAAKO,eAAiB,YAAYP,KAAM,iBAAkB,GAsC5D,OAnCAF,EAASU,UAAUC,kBAAoB,WACjCT,KAAKM,iBACPN,KAAKC,QAAQS,SAIjBZ,EAASU,UAAUG,qBAAuB,WACxCX,KAAKC,QAAQW,WAGfd,EAASU,UAAUK,YAAc,SAAUC,GACzCd,KAAKe,QAAQD,IAGfhB,EAASU,UAAUO,QAAU,SAAUD,GACjCd,KAAKM,kBACPQ,EAAGE,iBACHF,EAAGR,mBAGDN,KAAKK,UACPL,KAAKO,eAAeU,QAIxBnB,EAASU,UAAUU,OAAS,WAC1B,IAAIC,EAEAC,EAAO,YAAWpB,MACtB,OAAO,YAAE,IAAM,CACbqB,SAAU,KACVC,OAAQH,EAAK,GAAIA,EAAGC,IAAQ,EAAMD,EAAG,kBAAoBnB,KAAKI,QAASe,EAAG,yBAA2BnB,KAAKK,SAAUc,MAIjHrB,EA3DT,GA8DAA,EAASyB,MAAQ,CAEfC,IArEmB,yWAwEnBC,GAvEkB","file":"static/js/80.5399f7b7.chunk.js","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { GESTURE_CONTROLLER } from './index-6f647ec8.js';\nvar backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nvar backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nvar Backdrop =\n/** @class */\nfunction () {\n  function Backdrop(hostRef) {\n    registerInstance(this, hostRef);\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    /**\n     * If `true`, the backdrop will be visible.\n     */\n\n    this.visible = true;\n    /**\n     * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\n     */\n\n    this.tappable = true;\n    /**\n     * If `true`, the backdrop will stop propagation on tap.\n     */\n\n    this.stopPropagation = true;\n    this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n  }\n\n  Backdrop.prototype.connectedCallback = function () {\n    if (this.stopPropagation) {\n      this.blocker.block();\n    }\n  };\n\n  Backdrop.prototype.disconnectedCallback = function () {\n    this.blocker.unblock();\n  };\n\n  Backdrop.prototype.onMouseDown = function (ev) {\n    this.emitTap(ev);\n  };\n\n  Backdrop.prototype.emitTap = function (ev) {\n    if (this.stopPropagation) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    if (this.tappable) {\n      this.ionBackdropTap.emit();\n    }\n  };\n\n  Backdrop.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      tabindex: \"-1\",\n      class: (_a = {}, _a[mode] = true, _a['backdrop-hide'] = !this.visible, _a['backdrop-no-tappable'] = !this.tappable, _a)\n    });\n  };\n\n  return Backdrop;\n}();\n\nBackdrop.style = {\n  /*STENCIL:MODE:ios*/\n  ios: backdropIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: backdropMdCss\n};\nexport { Backdrop as ion_backdrop };"],"sourceRoot":""}